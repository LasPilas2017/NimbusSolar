{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\garci\\\\Downloads\\\\nimbus-login-app\\\\src\\\\componentes\\\\Proyectos\\\\Proyectos.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { supabase } from \"../../supabase\";\nimport { Pencil, Save, X, XCircle } from \"lucide-react\";\nimport { Trash2 } from \"lucide-react\";\nimport ResumenFinanciero from \"../contabilidad/ResumenFinanciero\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Proyectos() {\n  _s();\n  var _nuevoProyecto$nombre, _nuevoProyecto$descri, _ref3, _ref4;\n  const [proyectos, setProyectos] = useState([]);\n  const [personalDisponible, setPersonalDisponible] = useState([]);\n  const [supervisoresPorProyecto, setSupervisoresPorProyecto] = useState({});\n  const [mostrarFormulario, setMostrarFormulario] = useState(false);\n  const [modoLectura, setModoLectura] = useState(true);\n  const [nuevoProyecto, setNuevoProyecto] = useState({\n    nombre: \"\",\n    descripcion: \"\"\n  });\n  const [supervisoresSeleccionados, setSupervisoresSeleccionados] = useState([]);\n  const [trabajadoresSeleccionados, setTrabajadoresSeleccionados] = useState([]);\n  const [trabajos, setTrabajos] = useState([{\n    nombre: \"\",\n    unidades: \"\"\n  }]);\n  const [proyectoSeleccionado, setProyectoSeleccionado] = useState(null);\n  const [mostrarFormularioEdicion, setMostrarFormularioEdicion] = useState(false);\n  const [modoEdicion, setModoEdicion] = useState(false);\n  const [trabajosProyecto, setTrabajosProyecto] = useState([]);\n  const [personalAsignado, setPersonalAsignado] = useState([]);\n  const [gastosProyecto, setGastosProyecto] = useState([]);\n  useEffect(() => {\n    if (proyectoSeleccionado) {\n      cargarDatosProyecto(proyectoSeleccionado);\n    }\n  }, [proyectoSeleccionado]);\n  const cargarDatosProyecto = async proyecto => {\n    setProyectoSeleccionado(proyecto);\n    console.log(\"UUID del proyecto:\", proyecto.id);\n    setModoEdicion(false);\n    const {\n      data: trabajosCargados,\n      error: errorTrabajos\n    } = await supabase.from(\"proyectos_trabajos\").select(\"nombre_trabajo, unidades_totales\").eq(\"proyecto_id\", proyecto.id);\n    console.log(\"🚀 Trabajos cargados:\", trabajosCargados);\n    if (errorTrabajos) {\n      console.error(\"Error al cargar trabajos:\", errorTrabajos);\n    }\n    setTrabajos(trabajosCargados && trabajosCargados.length > 0 ? trabajosCargados.map(t => ({\n      nombre: t.nombre_trabajo,\n      unidades: t.unidades_totales\n    })) : [{\n      nombre: \"\",\n      unidades: \"\"\n    }]);\n    const {\n      data: sup\n    } = await supabase.from(\"proyectos_personal\").select(\"trabajador_id\").eq(\"proyecto_id\", proyecto.id).eq(\"rol\", \"supervisor\");\n    setSupervisoresSeleccionados((sup === null || sup === void 0 ? void 0 : sup.map(s => s.trabajador_id)) || []);\n    const {\n      data: trab\n    } = await supabase.from(\"proyectos_personal\").select(\"trabajador_id\").eq(\"proyecto_id\", proyecto.id).eq(\"rol\", \"trabajador\");\n    setTrabajadoresSeleccionados((trab === null || trab === void 0 ? void 0 : trab.map(t => t.trabajador_id)) || []);\n    const {\n      data: personal\n    } = await supabase.from(\"registrodepersonal\").select(\"id, salariopordia\").in(\"id\", [...((sup === null || sup === void 0 ? void 0 : sup.map(s => s.trabajador_id)) || []), ...((trab === null || trab === void 0 ? void 0 : trab.map(t => t.trabajador_id)) || [])]);\n    setPersonalAsignado(personal || []);\n\n    // ⚠️ Primero revisamos si existe y tiene nombre antes de la consulta de egresos\n    if (!proyecto || !proyecto.nombre) {\n      console.warn(\"⚠️ El proyecto recibido no tiene nombre o es null:\", proyecto);\n      return;\n    }\n    console.log(\"📦 Nombre del proyecto:\", proyecto.nombre);\n\n    // Ahora sí podemos hacer la consulta\n    const {\n      data: egresos,\n      error: errorEgresos\n    } = await supabase.from(\"contabilidad\").select(\"monto\").eq(\"proyecto_id\", proyecto.id); // ¡Usamos proyecto_id en vez de nombre!\n\n    if (errorEgresos) {\n      console.error(\"Error al obtener egresos:\", errorEgresos);\n    }\n    setGastosProyecto(egresos || []);\n    const {\n      data: reportes,\n      error: errorReportes\n    } = await supabase.from(\"reportesdiarios\").select(\"cantidad, trabajo\").eq(\"proyecto\", proyecto.id);\n    if (errorReportes) {\n      console.error(\"Error obteniendo reportes:\", errorReportes);\n    }\n    await obtenerPersonal(proyecto); // 👈 Ya podemos llamar a obtenerPersonal\n  };\n  useEffect(() => {\n    obtenerProyectos();\n    obtenerPersonal();\n  }, []);\n  const obtenerProyectos = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from(\"proyectos\").select(\"*\").order(\"id\");\n    if (!error) {\n      setProyectos(data);\n      obtenerSupervisores(data);\n    }\n  };\n  const obtenerPersonal = async proyectoParam => {\n    const {\n      data: asignados\n    } = await supabase.from(\"proyectos_personal\").select(\"trabajador_id, proyecto_id\");\n    const idsOcupados = (asignados === null || asignados === void 0 ? void 0 : asignados.map(t => t.trabajador_id)) || [];\n    let idsPermitidos = [];\n    if (proyectoParam) {\n      // Usamos el proyecto recibido\n      const {\n        data: asignadosActualProyecto\n      } = await supabase.from(\"proyectos_personal\").select(\"trabajador_id\").eq(\"proyecto_id\", proyectoParam.id);\n      idsPermitidos = (asignadosActualProyecto === null || asignadosActualProyecto === void 0 ? void 0 : asignadosActualProyecto.map(t => t.trabajador_id)) || [];\n    }\n    const {\n      data,\n      error\n    } = await supabase.from(\"registrodepersonal\").select(\"id, nombrecompleto\");\n    if (error) {\n      console.error(\"Error al obtener personal:\", error);\n      return;\n    }\n    const personalFiltrado = data.filter(p => !idsOcupados.includes(p.id) || idsPermitidos.includes(p.id));\n    setPersonalDisponible(personalFiltrado);\n  };\n  const obtenerSupervisores = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from(\"proyectos_personal\").select(\"proyecto_id, rol, trabajador_id, trabajador:registrodepersonal (nombrecompleto)\").eq(\"rol\", \"supervisor\");\n    if (!error) {\n      const mapa = {};\n      data.forEach(entry => {\n        var _entry$trabajador;\n        mapa[entry.proyecto_id] = ((_entry$trabajador = entry.trabajador) === null || _entry$trabajador === void 0 ? void 0 : _entry$trabajador.nombrecompleto) || \"Sin supervisor\";\n      });\n      setSupervisoresPorProyecto(mapa);\n    } else {\n      console.error(\"Error obteniendo supervisores:\", error);\n    }\n  };\n  // 🔹 Obtiene todos los IDs de trabajadores ya asignados a cualquier proyecto\n  const obtenerTrabajadoresYaAsignados = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from(\"proyectos_personal\").select(\"trabajador_id\");\n    if (error) {\n      console.error(\"Error al obtener trabajadores ya asignados:\", error);\n      return [];\n    }\n\n    // Devolver solo los IDs en un array\n    return data.map(registro => registro.trabajador_id);\n  };\n  const agregarProyecto = async () => {\n    if (!nuevoProyecto.nombre.trim()) return alert(\"El nombre es obligatorio.\");\n\n    // Verificá lo que estás enviando a Supabase\n    console.log(\"Enviando a Supabase:\", nuevoProyecto);\n    const {\n      data,\n      error\n    } = await supabase.from(\"proyectos\").insert([{\n      nombre: nuevoProyecto.nombre,\n      descripcion: nuevoProyecto.descripcion || null\n    }]).select();\n    console.log(\"Respuesta de Supabase:\", {\n      data,\n      error\n    });\n    if (error || !(data !== null && data !== void 0 && data.length)) {\n      console.error(\"Error al guardar el proyecto:\", error);\n      return alert(\"Error al guardar el proyecto\");\n    }\n    const nuevoId = data[0].id;\n    await supabase.from(\"proyectos_personal\").insert(supervisoresSeleccionados.map(id => ({\n      proyecto_id: nuevoId,\n      trabajador_id: id,\n      rol: \"supervisor\"\n    })));\n    await supabase.from(\"proyectos_personal\").insert(trabajadoresSeleccionados.map(id => ({\n      proyecto_id: nuevoId,\n      trabajador_id: id,\n      rol: \"trabajador\"\n    })));\n    console.log(\"Trabajos a insertar:\", trabajos);\n    await supabase.from(\"proyectos_trabajos\").insert(trabajos.filter(t => t.nombre.trim() !== \"\" && parseInt(t.unidades)).map(t => ({\n      proyecto_id: nuevoId,\n      nombre_trabajo: t.nombre.trim(),\n      unidades_totales: parseInt(t.unidades, 10)\n    })));\n    setNuevoProyecto({\n      nombre: \"\",\n      descripcion: \"\"\n    });\n    setSupervisoresSeleccionados([]);\n    setTrabajadoresSeleccionados([]);\n    setTrabajos([{\n      nombre: \"\",\n      unidades: \"\"\n    }]);\n    setMostrarFormulario(false);\n    obtenerProyectos();\n  };\n  const eliminarProyecto = async id => {\n    if (!confirm(\"¿Eliminar este proyecto?\")) return;\n    const {\n      error\n    } = await supabase.from(\"proyectos\").delete().eq(\"id\", id);\n    if (!error) obtenerProyectos();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-white/10 backdrop-blur-xl min-h-screen rounded-2xl\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mb-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          setMostrarFormulario(!mostrarFormulario);\n          obtenerPersonal(); // 🔥 Esto recargará la lista filtrada\n        },\n        className: \"bg-white/30 backdrop-blur-md p-6 rounded-xl shadow-lg border border-white/20 hover:shadow-xl transition cursor-pointer w-full max-w-md text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-bold text-gray-800 mb-2\",\n          children: \"\\u2795 Nuevo proyecto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-600\",\n          children: \"Crea un nuevo proyecto y as\\xEDgnale un supervisor.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), mostrarFormulario && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white/30 backdrop-blur-lg p-6 rounded-2xl shadow-xl border border-white/20 max-w-3xl mx-auto mb-10 space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold text-purple-900\",\n        children: \"\\uD83D\\uDEE0 Crear nuevo proyecto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Ej: Proyecto Las Pilas\",\n        value: (_nuevoProyecto$nombre = nuevoProyecto.nombre) !== null && _nuevoProyecto$nombre !== void 0 ? _nuevoProyecto$nombre : \"\",\n        onChange: e => setNuevoProyecto({\n          ...nuevoProyecto,\n          nombre: e.target.value\n        }),\n        className: \"w-full p-3 border rounded-xl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Ej: Instalaci\\xF3n de sistema solar...\",\n        value: (_nuevoProyecto$descri = nuevoProyecto.descripcion) !== null && _nuevoProyecto$descri !== void 0 ? _nuevoProyecto$descri : \"\",\n        onChange: e => setNuevoProyecto({\n          ...nuevoProyecto,\n          descripcion: e.target.value\n        }),\n        className: \"w-full p-3 border rounded-xl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700 mb-1\",\n          children: \"Supervisores\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap gap-2\",\n          children: personalDisponible.map(persona => {\n            const estaEnTrabajadores = trabajadoresSeleccionados.includes(persona.id);\n            const seleccionado = supervisoresSeleccionados.includes(persona.id);\n            return /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              disabled: estaEnTrabajadores,\n              onClick: () => {\n                if (seleccionado) {\n                  setSupervisoresSeleccionados(supervisoresSeleccionados.filter(id => id !== persona.id));\n                } else {\n                  setSupervisoresSeleccionados([...supervisoresSeleccionados, persona.id]);\n                  setTrabajadoresSeleccionados(trabajadoresSeleccionados.filter(id => id !== persona.id));\n                }\n              },\n              className: `px-3 py-1 rounded-full border text-sm flex items-center gap-1 transition-all duration-150 ${seleccionado ? 'bg-purple-600 text-white border-purple-700' : estaEnTrabajadores ? 'bg-gray-300 text-gray-500 border-gray-400 cursor-not-allowed' : 'bg-white text-gray-700 border-gray-300 hover:bg-purple-100'}`,\n              children: [persona.nombrecompleto, seleccionado && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-1\",\n                children: \"\\u2705\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 28\n              }, this)]\n            }, persona.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 9\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-gray-500 mt-1\",\n          children: \"Puedes seleccionar uno o varios supervisores.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700 mb-1\",\n          children: \"Trabajadores asignados\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap gap-2\",\n          children: personalDisponible.map(persona => {\n            const estaEnSupervisores = supervisoresSeleccionados.includes(persona.id);\n            const seleccionado = trabajadoresSeleccionados.includes(persona.id);\n            return /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              disabled: estaEnSupervisores,\n              onClick: () => {\n                if (seleccionado) {\n                  setTrabajadoresSeleccionados(trabajadoresSeleccionados.filter(id => id !== persona.id));\n                } else {\n                  setTrabajadoresSeleccionados([...trabajadoresSeleccionados, persona.id]);\n                  setSupervisoresSeleccionados(supervisoresSeleccionados.filter(id => id !== persona.id));\n                }\n              },\n              className: `px-3 py-1 rounded-full border text-sm flex items-center gap-1 transition-all duration-150 ${seleccionado ? 'bg-green-600 text-white border-green-700' : estaEnSupervisores ? 'bg-gray-300 text-gray-500 border-gray-400 cursor-not-allowed' : 'bg-white text-gray-700 border-gray-300 hover:bg-green-100'}`,\n              children: [persona.nombrecompleto, seleccionado && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-1\",\n                children: \"\\u2705\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 28\n              }, this)]\n            }, persona.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 9\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-gray-500 mt-1\",\n          children: \"Puedes asignar varios trabajadores.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-[1fr_1fr_80px_80px_auto] gap-4 font-semibold text-sm text-gray-600 mb-1 px-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Nombre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Unidades\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Instalado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Faltan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 3\n        }, this), (() => {\n          const listaTrabajos = modoEdicion || mostrarFormulario ? trabajos : trabajosProyecto;\n          return listaTrabajos.map((trabajo, index) => {\n            var _ref, _trabajo$nombre, _ref2, _trabajo$unidades, _trabajo$instaladas;\n            const nombre = (_ref = (_trabajo$nombre = trabajo.nombre) !== null && _trabajo$nombre !== void 0 ? _trabajo$nombre : trabajo.nombre_trabajo) !== null && _ref !== void 0 ? _ref : \"\";\n            const unidades = parseInt((_ref2 = (_trabajo$unidades = trabajo.unidades) !== null && _trabajo$unidades !== void 0 ? _trabajo$unidades : trabajo.unidades_totales) !== null && _ref2 !== void 0 ? _ref2 : 0, 10);\n            const instaladas = parseInt((_trabajo$instaladas = trabajo.instaladas) !== null && _trabajo$instaladas !== void 0 ? _trabajo$instaladas : 0, 10);\n            const faltan = Number.isFinite(unidades - instaladas) ? unidades - instaladas : 0;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-[1fr_1fr_80px_80px_auto] gap-4 mb-2 items-center\",\n              children: [modoEdicion || mostrarFormulario ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: nombre !== null && nombre !== void 0 ? nombre : \"\",\n                  onChange: e => {\n                    const nuevos = [...trabajos];\n                    nuevos[index].nombre = e.target.value;\n                    setTrabajos(nuevos);\n                  },\n                  className: \"p-2 border rounded-xl\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 12\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: Number.isNaN(unidades) ? \"\" : unidades,\n                  onChange: e => {\n                    const nuevos = [...trabajos];\n                    const valor = parseInt(e.target.value, 10);\n                    nuevos[index].unidades = Number.isNaN(valor) ? 0 : valor;\n                    setTrabajos(nuevos);\n                  },\n                  className: \"p-2 border rounded-xl\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 1\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-2 bg-gray-100 rounded-xl text-center\",\n                  children: nombre\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-2 bg-gray-100 rounded-xl text-center\",\n                  children: unidades\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-2 bg-gray-100 rounded-xl text-center\",\n                children: instaladas\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-2 bg-gray-100 rounded-xl text-center\",\n                children: faltan\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 11\n              }, this), modoEdicion || mostrarFormulario ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    const nuevos = trabajos.filter((_, i) => i !== index);\n                    setTrabajos(nuevos);\n                  },\n                  className: \"text-red-500 hover:text-red-700\",\n                  title: \"Eliminar trabajo\",\n                  children: /*#__PURE__*/_jsxDEV(XCircle, {\n                    size: 20\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 442,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 13\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 13\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 9\n            }, this);\n          });\n        })()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end gap-4 mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setMostrarFormulario(false);\n            setNuevoProyecto({\n              nombre: \"\",\n              descripcion: \"\"\n            });\n            setSupervisoresSeleccionados([]);\n            setTrabajadoresSeleccionados([]);\n            setTrabajos([{\n              nombre: \"\",\n              unidades: \"\"\n            }]);\n          },\n          className: \"bg-gray-300 hover:bg-gray-400 text-gray-800 px-6 py-2 rounded-xl shadow-md\",\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: agregarProyecto,\n          className: \"bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-xl shadow-md\",\n          children: \"Guardar proyecto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-2 gap-4\",\n      children: proyectos.map(p => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white/30 backdrop-blur-md p-4 rounded-xl shadow-lg border border-white/20 hover:shadow-xl transition relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: async () => {\n            await cargarDatosProyecto(p);\n            await obtenerPersonal(p);\n          },\n          className: \"cursor-pointer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-lg font-semibold text-gray-800\",\n            children: p.nombre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-500 mb-2\",\n            children: p.descripcion || \"Sin descripción\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-600 mt-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"text-gray-700\",\n              children: \"Supervisor:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 11\n            }, this), \" \", supervisoresPorProyecto[p.id] || \"Sin asignar\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-2 absolute top-2 right-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: async () => {\n              setModoEdicion(true);\n              await cargarDatosProyecto(p);\n              await obtenerPersonal(p); // 🔥 Cargar personal disponible actualizado\n            },\n            className: \"text-blue-600 hover:text-blue-800\",\n            children: /*#__PURE__*/_jsxDEV(Pencil, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => eliminarProyecto(p.id),\n            className: \"text-red-600 hover:text-red-800\",\n            children: /*#__PURE__*/_jsxDEV(Trash2, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 7\n        }, this)]\n      }, p.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 1\n    }, this), proyectoSeleccionado && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-40 flex justify-center items-start z-50 pt-20 px-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-xl shadow-lg max-w-3xl w-full relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"absolute top-2 right-3 text-red-600 font-bold text-xl\",\n          onClick: () => {\n            setProyectoSeleccionado(null);\n            setModoEdicion(false);\n          },\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold text-purple-900 mb-4\",\n          children: modoEdicion ? '✏️ Editar proyecto' : proyectoSeleccionado.nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Nombre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: (_ref3 = modoEdicion ? nuevoProyecto.nombre : proyectoSeleccionado.nombre) !== null && _ref3 !== void 0 ? _ref3 : \"\",\n            disabled: !modoEdicion,\n            onChange: e => setNuevoProyecto({\n              ...nuevoProyecto,\n              nombre: e.target.value\n            }),\n            className: `w-full p-2 border rounded-xl ${!modoEdicion ? 'bg-gray-100 cursor-not-allowed' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: (_ref4 = modoEdicion ? nuevoProyecto.descripcion : proyectoSeleccionado.descripcion) !== null && _ref4 !== void 0 ? _ref4 : \"\",\n          disabled: !modoEdicion,\n          onChange: e => setNuevoProyecto({\n            ...nuevoProyecto,\n            descripcion: e.target.value\n          }),\n          className: `w-full p-2 border rounded-xl ${!modoEdicion ? 'bg-gray-100 cursor-not-allowed' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Supervisores\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-wrap gap-2\",\n            children: personalDisponible.map(persona => {\n              const estaEnTrabajadores = trabajadoresSeleccionados.includes(persona.id);\n              const seleccionado = supervisoresSeleccionados.includes(persona.id);\n              return /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                disabled: !modoEdicion || estaEnTrabajadores,\n                onClick: () => {\n                  if (seleccionado) {\n                    setSupervisoresSeleccionados(supervisoresSeleccionados.filter(id => id !== persona.id));\n                  } else {\n                    setSupervisoresSeleccionados([...supervisoresSeleccionados, persona.id]);\n                    setTrabajadoresSeleccionados(trabajadoresSeleccionados.filter(id => id !== persona.id));\n                  }\n                },\n                className: `px-3 py-1 rounded-full border text-sm flex items-center gap-1 transition-all duration-150 ${seleccionado ? 'bg-purple-600 text-white border-purple-700' : estaEnTrabajadores || !modoEdicion ? 'bg-gray-300 text-gray-500 border-gray-400 cursor-not-allowed' : 'bg-white text-gray-700 border-gray-300 hover:bg-purple-100'}`,\n                children: [persona.nombrecompleto, seleccionado && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ml-1\",\n                  children: \"\\u2705\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 596,\n                  columnNumber: 28\n                }, this)]\n              }, persona.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 575,\n                columnNumber: 9\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-500 mt-1\",\n            children: \"Puedes seleccionar uno o varios supervisores.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Trabajadores asignados\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-wrap gap-2\",\n            children: personalDisponible.map(persona => {\n              const estaEnSupervisores = supervisoresSeleccionados.includes(persona.id);\n              const seleccionado = trabajadoresSeleccionados.includes(persona.id);\n              return /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                disabled: !modoEdicion || estaEnSupervisores,\n                onClick: () => {\n                  if (seleccionado) {\n                    setTrabajadoresSeleccionados(trabajadoresSeleccionados.filter(id => id !== persona.id));\n                  } else {\n                    setTrabajadoresSeleccionados([...trabajadoresSeleccionados, persona.id]);\n                    setSupervisoresSeleccionados(supervisoresSeleccionados.filter(id => id !== persona.id));\n                  }\n                },\n                className: `px-3 py-1 rounded-full border text-sm flex items-center gap-1 transition-all duration-150 ${seleccionado ? 'bg-green-600 text-white border-green-700' : estaEnSupervisores || !modoEdicion ? 'bg-gray-300 text-gray-500 border-gray-400 cursor-not-allowed' : 'bg-white text-gray-700 border-gray-300 hover:bg-green-100'}`,\n                children: [persona.nombrecompleto, seleccionado && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ml-1\",\n                  children: \"\\u2705\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 633,\n                  columnNumber: 28\n                }, this)]\n              }, persona.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 612,\n                columnNumber: 9\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-500 mt-1\",\n            children: \"Puedes asignar varios trabajadores.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-2\",\n            children: \"Trabajos por realizar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-[1fr_1fr_80px_80px_auto] gap-4 font-semibold text-sm text-gray-600 mb-1 px-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Nombre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 645,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Unidades\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 646,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Instalado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Faltan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 3\n          }, this), (() => {\n            const listaTrabajos = trabajosProyecto.length > 0 ? trabajosProyecto : trabajos;\n            return listaTrabajos.map((trabajo, index) => {\n              var _ref5, _trabajo$nombre2, _ref6, _trabajo$unidades2, _trabajo$instaladas2;\n              const nombre = (_ref5 = (_trabajo$nombre2 = trabajo.nombre) !== null && _trabajo$nombre2 !== void 0 ? _trabajo$nombre2 : trabajo.nombre_trabajo) !== null && _ref5 !== void 0 ? _ref5 : \"\";\n              const unidades = parseInt((_ref6 = (_trabajo$unidades2 = trabajo.unidades) !== null && _trabajo$unidades2 !== void 0 ? _trabajo$unidades2 : trabajo.unidades_totales) !== null && _ref6 !== void 0 ? _ref6 : 0, 10);\n              const instaladas = parseInt((_trabajo$instaladas2 = trabajo.instaladas) !== null && _trabajo$instaladas2 !== void 0 ? _trabajo$instaladas2 : 0, 10);\n              const faltan = Number.isFinite(unidades - instaladas) ? unidades - instaladas : 0;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grid grid-cols-[1fr_1fr_80px_80px_auto] gap-4 mb-2 items-center\",\n                children: [modoEdicion ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: nombre,\n                    onChange: e => {\n                      const nuevos = [...trabajos];\n                      nuevos[index].nombre = e.target.value;\n                      setTrabajos(nuevos);\n                    },\n                    className: \"p-2 border rounded-xl\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 667,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    value: Number.isNaN(unidades) ? \"\" : unidades,\n                    onChange: e => {\n                      const nuevos = [...trabajos];\n                      const valor = parseInt(e.target.value, 10);\n                      nuevos[index].unidades = Number.isNaN(valor) ? 0 : valor;\n                      setTrabajos(nuevos);\n                    },\n                    className: \"p-2 border rounded-xl\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 677,\n                    columnNumber: 13\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"p-2 bg-gray-100 rounded-xl text-center\",\n                    children: nombre\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 691,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"p-2 bg-gray-100 rounded-xl text-center\",\n                    children: unidades\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 692,\n                    columnNumber: 13\n                  }, this)]\n                }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-2 bg-gray-100 rounded-xl text-center\",\n                  children: instaladas\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 695,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-2 bg-gray-100 rounded-xl text-center\",\n                  children: faltan\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 696,\n                  columnNumber: 9\n                }, this), modoEdicion ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      const nuevos = trabajos.filter((_, i) => i !== index);\n                      setTrabajos(nuevos);\n                    },\n                    className: \"text-red-600 hover:text-red-800 font-bold text-lg\",\n                    children: \"\\u274C\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 700,\n                    columnNumber: 13\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 699,\n                  columnNumber: 11\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 711,\n                  columnNumber: 11\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 664,\n                columnNumber: 7\n              }, this);\n            });\n          })(), (modoEdicion || mostrarFormulario) && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setTrabajos([...trabajos, {\n              nombre: \"\",\n              unidades: \"\",\n              instaladas: 0\n            }]),\n            className: \"text-blue-700 text-sm hover:underline mt-1\",\n            children: \"\\u2795 A\\xF1adir otro trabajo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 721,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(ResumenFinanciero, {\n          trabajosProyecto: trabajosProyecto,\n          personalAsignado: personalAsignado,\n          gastosProyecto: gastosProyecto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end mt-4 gap-2\",\n          children: modoEdicion ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setModoEdicion(false);\n              },\n              className: \"bg-gray-300 px-4 py-2 rounded-xl\",\n              children: \"Cancelar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 742,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: async () => {\n                // 🔹 Actualizar proyecto (nombre y descripción)\n                const {\n                  error\n                } = await supabase.from(\"proyectos\").update({\n                  nombre: nuevoProyecto.nombre,\n                  descripcion: nuevoProyecto.descripcion\n                }).eq(\"id\", proyectoSeleccionado.id);\n                if (error) {\n                  console.error(\"Error al actualizar proyecto:\", error);\n                  alert(\"Error al guardar cambios\");\n                  return;\n                }\n\n                // 🔹 Limpiar supervisores y trabajadores actuales\n                await supabase.from(\"proyectos_personal\").delete().eq(\"proyecto_id\", proyectoSeleccionado.id);\n\n                // 🔹 Insertar supervisores\n                await supabase.from(\"proyectos_personal\").insert(supervisoresSeleccionados.map(id => ({\n                  proyecto_id: proyectoSeleccionado.id,\n                  trabajador_id: id,\n                  rol: \"supervisor\"\n                })));\n\n                // 🔹 Insertar trabajadores\n                await supabase.from(\"proyectos_personal\").insert(trabajadoresSeleccionados.map(id => ({\n                  proyecto_id: proyectoSeleccionado.id,\n                  trabajador_id: id,\n                  rol: \"trabajador\"\n                })));\n\n                // 🔹 Limpiar trabajos actuales\n                await supabase.from(\"proyectos_trabajos\").delete().eq(\"proyecto_id\", proyectoSeleccionado.id);\n\n                // 🔹 Insertar trabajos nuevos\n                await supabase.from(\"proyectos_trabajos\").insert(trabajos.filter(t => t.nombre.trim() !== \"\" && parseInt(t.unidades)).map(t => ({\n                  proyecto_id: proyectoSeleccionado.id,\n                  nombre_trabajo: t.nombre.trim(),\n                  unidades_totales: parseInt(t.unidades, 10)\n                })));\n                alert(\"Cambios guardados correctamente\");\n                setModoEdicion(false);\n                obtenerProyectos(); // Para refrescar la lista\n              },\n              className: \"bg-blue-600 text-white px-4 py-2 rounded-xl\",\n              children: \"Guardar cambios\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 750,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: async () => {\n              setNuevoProyecto({\n                nombre: proyectoSeleccionado.nombre,\n                descripcion: proyectoSeleccionado.descripcion\n              });\n              setModoEdicion(true);\n              const {\n                data: sup\n              } = await supabase.from(\"proyectos_personal\").select(\"trabajador_id\").eq(\"proyecto_id\", proyectoSeleccionado.id).eq(\"rol\", \"supervisor\");\n              setSupervisoresSeleccionados((sup === null || sup === void 0 ? void 0 : sup.map(s => s.trabajador_id)) || []);\n              const {\n                data: trab\n              } = await supabase.from(\"proyectos_personal\").select(\"trabajador_id\").eq(\"proyecto_id\", proyectoSeleccionado.id).eq(\"rol\", \"trabajador\");\n              setTrabajadoresSeleccionados((trab === null || trab === void 0 ? void 0 : trab.map(t => t.trabajador_id)) || []);\n              const {\n                data: trabs,\n                error: errorTrabs\n              } = await supabase.from(\"proyectos_trabajos\").select(\"nombre_trabajo, unidades_totales\").eq(\"proyecto_id\", proyectoSeleccionado.id);\n              if (errorTrabs) {\n                console.error(\"Error cargando trabajos del proyecto:\", errorTrabs);\n                return;\n              }\n              setTrabajos(trabs.map(t => ({\n                nombre: t.nombre_trabajo,\n                unidades: t.unidades_totales\n              })));\n              await obtenerPersonal(proyectoSeleccionado); // Recarga la lista filtrada de personal\n            },\n            className: \"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-xl shadow-md\",\n            children: \"\\u270F\\uFE0F Editar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 826,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 5\n  }, this);\n}\n_s(Proyectos, \"YNwGHnPRKjv2ixgXJKU1cJDE58o=\");\n_c = Proyectos;\nvar _c;\n$RefreshReg$(_c, \"Proyectos\");","map":{"version":3,"names":["useState","useEffect","supabase","Pencil","Save","X","XCircle","Trash2","ResumenFinanciero","jsxDEV","_jsxDEV","Fragment","_Fragment","Proyectos","_s","_nuevoProyecto$nombre","_nuevoProyecto$descri","_ref3","_ref4","proyectos","setProyectos","personalDisponible","setPersonalDisponible","supervisoresPorProyecto","setSupervisoresPorProyecto","mostrarFormulario","setMostrarFormulario","modoLectura","setModoLectura","nuevoProyecto","setNuevoProyecto","nombre","descripcion","supervisoresSeleccionados","setSupervisoresSeleccionados","trabajadoresSeleccionados","setTrabajadoresSeleccionados","trabajos","setTrabajos","unidades","proyectoSeleccionado","setProyectoSeleccionado","mostrarFormularioEdicion","setMostrarFormularioEdicion","modoEdicion","setModoEdicion","trabajosProyecto","setTrabajosProyecto","personalAsignado","setPersonalAsignado","gastosProyecto","setGastosProyecto","cargarDatosProyecto","proyecto","console","log","id","data","trabajosCargados","error","errorTrabajos","from","select","eq","length","map","t","nombre_trabajo","unidades_totales","sup","s","trabajador_id","trab","personal","in","warn","egresos","errorEgresos","reportes","errorReportes","obtenerPersonal","obtenerProyectos","order","obtenerSupervisores","proyectoParam","asignados","idsOcupados","idsPermitidos","asignadosActualProyecto","personalFiltrado","filter","p","includes","mapa","forEach","entry","_entry$trabajador","proyecto_id","trabajador","nombrecompleto","obtenerTrabajadoresYaAsignados","registro","agregarProyecto","trim","alert","insert","nuevoId","rol","parseInt","eliminarProyecto","confirm","delete","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","persona","estaEnTrabajadores","seleccionado","disabled","estaEnSupervisores","listaTrabajos","trabajo","index","_ref","_trabajo$nombre","_ref2","_trabajo$unidades","_trabajo$instaladas","instaladas","faltan","Number","isFinite","nuevos","isNaN","valor","_","i","title","size","_ref5","_trabajo$nombre2","_ref6","_trabajo$unidades2","_trabajo$instaladas2","update","trabs","errorTrabs","_c","$RefreshReg$"],"sources":["C:/Users/garci/Downloads/nimbus-login-app/src/componentes/Proyectos/Proyectos.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { supabase } from \"../../supabase\";\r\nimport { Pencil, Save, X, XCircle } from \"lucide-react\";\r\nimport { Trash2 } from \"lucide-react\";\r\nimport ResumenFinanciero from \"../contabilidad/ResumenFinanciero\";\r\n\r\nexport default function Proyectos() {\r\n  const [proyectos, setProyectos] = useState([]);\r\n  const [personalDisponible, setPersonalDisponible] = useState([]);\r\n  const [supervisoresPorProyecto, setSupervisoresPorProyecto] = useState({});\r\n  const [mostrarFormulario, setMostrarFormulario] = useState(false);\r\n  const [modoLectura, setModoLectura] = useState(true);\r\n  const [nuevoProyecto, setNuevoProyecto] = useState({ nombre: \"\", descripcion: \"\" });\r\n  const [supervisoresSeleccionados, setSupervisoresSeleccionados] = useState([]);\r\n  const [trabajadoresSeleccionados, setTrabajadoresSeleccionados] = useState([]);\r\n  const [trabajos, setTrabajos] = useState([{ nombre: \"\", unidades: \"\" }]); \r\n  const [proyectoSeleccionado, setProyectoSeleccionado] = useState(null);\r\n  const [mostrarFormularioEdicion, setMostrarFormularioEdicion] = useState(false);\r\n  const [modoEdicion, setModoEdicion] = useState(false);\r\n  const [trabajosProyecto, setTrabajosProyecto] = useState([]);\r\n  const [personalAsignado, setPersonalAsignado] = useState([]);\r\n  const [gastosProyecto, setGastosProyecto] = useState([]);\r\n\r\n   useEffect(() => {\r\n    if (proyectoSeleccionado) {\r\n      cargarDatosProyecto(proyectoSeleccionado);\r\n    }\r\n  }, [proyectoSeleccionado]);\r\n\r\nconst cargarDatosProyecto = async (proyecto) => {\r\n  setProyectoSeleccionado(proyecto);\r\n  console.log(\"UUID del proyecto:\", proyecto.id);\r\n  setModoEdicion(false);\r\n\r\n  const { data: trabajosCargados, error: errorTrabajos } = await supabase\r\n    .from(\"proyectos_trabajos\")\r\n    .select(\"nombre_trabajo, unidades_totales\")\r\n    .eq(\"proyecto_id\", proyecto.id);\r\n\r\n  console.log(\"🚀 Trabajos cargados:\", trabajosCargados);\r\n\r\n  if (errorTrabajos) {\r\n    console.error(\"Error al cargar trabajos:\", errorTrabajos);\r\n  }\r\n\r\n  setTrabajos(\r\n    (trabajosCargados && trabajosCargados.length > 0)\r\n      ? trabajosCargados.map((t) => ({\r\n          nombre: t.nombre_trabajo,\r\n          unidades: t.unidades_totales\r\n        }))\r\n      : [{ nombre: \"\", unidades: \"\" }]\r\n  );\r\n\r\n  const { data: sup } = await supabase\r\n    .from(\"proyectos_personal\")\r\n    .select(\"trabajador_id\")\r\n    .eq(\"proyecto_id\", proyecto.id)\r\n    .eq(\"rol\", \"supervisor\");\r\n  setSupervisoresSeleccionados(sup?.map((s) => s.trabajador_id) || []);\r\n\r\n  const { data: trab } = await supabase\r\n    .from(\"proyectos_personal\")\r\n    .select(\"trabajador_id\")\r\n    .eq(\"proyecto_id\", proyecto.id)\r\n    .eq(\"rol\", \"trabajador\");\r\n  setTrabajadoresSeleccionados(trab?.map((t) => t.trabajador_id) || []);\r\n\r\n  const { data: personal } = await supabase\r\n    .from(\"registrodepersonal\")\r\n    .select(\"id, salariopordia\")\r\n    .in(\r\n      \"id\",\r\n      [\r\n        ...(sup?.map((s) => s.trabajador_id) || []),\r\n        ...(trab?.map((t) => t.trabajador_id) || [])\r\n      ]\r\n    );\r\n  setPersonalAsignado(personal || []);\r\n\r\n  // ⚠️ Primero revisamos si existe y tiene nombre antes de la consulta de egresos\r\n  if (!proyecto || !proyecto.nombre) {\r\n    console.warn(\"⚠️ El proyecto recibido no tiene nombre o es null:\", proyecto);\r\n    return;\r\n  }\r\n\r\n  console.log(\"📦 Nombre del proyecto:\", proyecto.nombre);\r\n\r\n  // Ahora sí podemos hacer la consulta\r\n  const { data: egresos, error: errorEgresos } = await supabase\r\n    .from(\"contabilidad\")\r\n    .select(\"monto\")\r\n    .eq(\"proyecto_id\", proyecto.id); // ¡Usamos proyecto_id en vez de nombre!\r\n\r\n  if (errorEgresos) {\r\n    console.error(\"Error al obtener egresos:\", errorEgresos);\r\n  }\r\n\r\n  setGastosProyecto(egresos || []);\r\nconst { data: reportes, error: errorReportes } = await supabase\r\n  .from(\"reportesdiarios\")\r\n  .select(\"cantidad, trabajo\")\r\n  .eq(\"proyecto\", proyecto.id);\r\n\r\nif (errorReportes) {\r\n  console.error(\"Error obteniendo reportes:\", errorReportes);\r\n}\r\n\r\n  await obtenerPersonal(proyecto); // 👈 Ya podemos llamar a obtenerPersonal\r\n};\r\n\r\n\r\n  useEffect(() => {\r\n    obtenerProyectos();\r\n    obtenerPersonal();\r\n  }, []);\r\n\r\n\r\n  const obtenerProyectos = async () => {\r\n    const { data, error } = await supabase.from(\"proyectos\").select(\"*\").order(\"id\");\r\n    if (!error) {\r\n      setProyectos(data);\r\n      obtenerSupervisores(data);\r\n    }\r\n  };\r\n\r\nconst obtenerPersonal = async (proyectoParam) => {\r\n  const { data: asignados } = await supabase.from(\"proyectos_personal\").select(\"trabajador_id, proyecto_id\");\r\n  const idsOcupados = asignados?.map((t) => t.trabajador_id) || [];\r\n\r\n  let idsPermitidos = [];\r\n  if (proyectoParam) { // Usamos el proyecto recibido\r\n    const { data: asignadosActualProyecto } = await supabase\r\n      .from(\"proyectos_personal\")\r\n      .select(\"trabajador_id\")\r\n      .eq(\"proyecto_id\", proyectoParam.id);\r\n\r\n    idsPermitidos = asignadosActualProyecto?.map((t) => t.trabajador_id) || [];\r\n  }\r\n\r\n  const { data, error } = await supabase\r\n    .from(\"registrodepersonal\")\r\n    .select(\"id, nombrecompleto\");\r\n\r\n  if (error) {\r\n    console.error(\"Error al obtener personal:\", error);\r\n    return;\r\n  }\r\n\r\n  const personalFiltrado = data.filter(\r\n    (p) => !idsOcupados.includes(p.id) || idsPermitidos.includes(p.id)\r\n  );\r\n\r\n  setPersonalDisponible(personalFiltrado);\r\n};\r\n\r\n\r\n const obtenerSupervisores = async () => {\r\n  const { data, error } = await supabase\r\n    .from(\"proyectos_personal\")\r\n    .select(\"proyecto_id, rol, trabajador_id, trabajador:registrodepersonal (nombrecompleto)\")\r\n    .eq(\"rol\", \"supervisor\");\r\n\r\n  if (!error) {\r\n    const mapa = {};\r\n    data.forEach((entry) => {\r\n      mapa[entry.proyecto_id] = entry.trabajador?.nombrecompleto || \"Sin supervisor\";\r\n    });\r\n    setSupervisoresPorProyecto(mapa);\r\n  } else {\r\n    console.error(\"Error obteniendo supervisores:\", error);\r\n  }\r\n};\r\n// 🔹 Obtiene todos los IDs de trabajadores ya asignados a cualquier proyecto\r\nconst obtenerTrabajadoresYaAsignados = async () => {\r\n  const { data, error } = await supabase\r\n    .from(\"proyectos_personal\")\r\n    .select(\"trabajador_id\");\r\n\r\n  if (error) {\r\n    console.error(\"Error al obtener trabajadores ya asignados:\", error);\r\n    return [];\r\n  }\r\n\r\n  // Devolver solo los IDs en un array\r\n  return data.map((registro) => registro.trabajador_id);\r\n};\r\n  const agregarProyecto = async () => {\r\n    if (!nuevoProyecto.nombre.trim()) return alert(\"El nombre es obligatorio.\");\r\n\r\n// Verificá lo que estás enviando a Supabase\r\nconsole.log(\"Enviando a Supabase:\", nuevoProyecto);\r\n\r\nconst { data, error } = await supabase\r\n  .from(\"proyectos\")\r\n  .insert([\r\n    {\r\n      nombre: nuevoProyecto.nombre,\r\n      descripcion: nuevoProyecto.descripcion || null,\r\n    }\r\n  ])\r\n  .select();\r\n\r\nconsole.log(\"Respuesta de Supabase:\", { data, error });\r\n\r\nif (error || !data?.length) {\r\n  console.error(\"Error al guardar el proyecto:\", error);\r\n  return alert(\"Error al guardar el proyecto\");\r\n}\r\n\r\n\r\n    const nuevoId = data[0].id;\r\n\r\n    await supabase.from(\"proyectos_personal\").insert(\r\n      supervisoresSeleccionados.map((id) => ({\r\n        proyecto_id: nuevoId,\r\n        trabajador_id: id,\r\n        rol: \"supervisor\"\r\n      }))\r\n    );\r\n\r\n    await supabase.from(\"proyectos_personal\").insert(\r\n      trabajadoresSeleccionados.map((id) => ({\r\n        proyecto_id: nuevoId,\r\n        trabajador_id: id,\r\n        rol: \"trabajador\"\r\n      }))\r\n    );\r\n\r\n    console.log(\"Trabajos a insertar:\", trabajos);\r\n\r\n    await supabase.from(\"proyectos_trabajos\").insert(\r\n  trabajos\r\n    .filter(t => t.nombre.trim() !== \"\" && parseInt(t.unidades))\r\n    .map((t) => ({\r\n      proyecto_id: nuevoId,\r\n      nombre_trabajo: t.nombre.trim(),\r\n      unidades_totales: parseInt(t.unidades, 10)\r\n    }))\r\n);\r\n\r\n\r\n    setNuevoProyecto({ nombre: \"\", descripcion: \"\" });\r\n    setSupervisoresSeleccionados([]);\r\n    setTrabajadoresSeleccionados([]);\r\n    setTrabajos([{ nombre: \"\", unidades: \"\" }]);\r\n    setMostrarFormulario(false);\r\n    obtenerProyectos();\r\n  };\r\n\r\n  const eliminarProyecto = async (id) => {\r\n    if (!confirm(\"¿Eliminar este proyecto?\")) return;\r\n    const { error } = await supabase.from(\"proyectos\").delete().eq(\"id\", id);\r\n    if (!error) obtenerProyectos();\r\n  };\r\n\r\n  \r\n  return (\r\n    <div className=\"p-6 bg-white/10 backdrop-blur-xl min-h-screen rounded-2xl\">\r\n      {/* Botón para crear un nuevo proyecto */}\r\n      <div className=\"flex justify-center mb-6\">\r\n        <div\r\n          onClick={() => {\r\n              setMostrarFormulario(!mostrarFormulario);\r\n              obtenerPersonal(); // 🔥 Esto recargará la lista filtrada\r\n            }}\r\n          className=\"bg-white/30 backdrop-blur-md p-6 rounded-xl shadow-lg border border-white/20 hover:shadow-xl transition cursor-pointer w-full max-w-md text-center\"\r\n        >\r\n          <h3 className=\"text-lg font-bold text-gray-800 mb-2\">➕ Nuevo proyecto</h3>\r\n          <p className=\"text-sm text-gray-600\">Crea un nuevo proyecto y asígnale un supervisor.</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Formulario de creación */}\r\n      {mostrarFormulario && (\r\n        <div className=\"bg-white/30 backdrop-blur-lg p-6 rounded-2xl shadow-xl border border-white/20 max-w-3xl mx-auto mb-10 space-y-4\">\r\n          <h2 className=\"text-xl font-bold text-purple-900\">🛠 Crear nuevo proyecto</h2>\r\n\r\n          {/* Nombre */}\r\n          <input\r\n              type=\"text\"\r\n              placeholder=\"Ej: Proyecto Las Pilas\"\r\n              value={nuevoProyecto.nombre ?? \"\"}\r\n              onChange={(e) => setNuevoProyecto({ ...nuevoProyecto, nombre: e.target.value })}\r\n              className=\"w-full p-3 border rounded-xl\"\r\n            />\r\n\r\n          {/* Descripción */}\r\n         <textarea\r\n              placeholder=\"Ej: Instalación de sistema solar...\"\r\n              value={nuevoProyecto.descripcion ?? \"\"}\r\n              onChange={(e) => setNuevoProyecto({ ...nuevoProyecto, descripcion: e.target.value })}\r\n              className=\"w-full p-3 border rounded-xl\"\r\n            />\r\n\r\n\r\n          {/* Supervisores */}\r\n<div>\r\n  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Supervisores</label>\r\n  <div className=\"flex flex-wrap gap-2\">\r\n    {personalDisponible.map((persona) => {\r\n      const estaEnTrabajadores = trabajadoresSeleccionados.includes(persona.id);\r\n      const seleccionado = supervisoresSeleccionados.includes(persona.id);\r\n      return (\r\n        <button\r\n          key={persona.id}\r\n          type=\"button\"\r\n          disabled={estaEnTrabajadores}\r\n          onClick={() => {\r\n            if (seleccionado) {\r\n              setSupervisoresSeleccionados(supervisoresSeleccionados.filter(id => id !== persona.id));\r\n            } else {\r\n              setSupervisoresSeleccionados([...supervisoresSeleccionados, persona.id]);\r\n              setTrabajadoresSeleccionados(trabajadoresSeleccionados.filter(id => id !== persona.id));\r\n            }\r\n          }}\r\n          className={`px-3 py-1 rounded-full border text-sm flex items-center gap-1 transition-all duration-150 ${\r\n            seleccionado\r\n              ? 'bg-purple-600 text-white border-purple-700'\r\n              : estaEnTrabajadores\r\n              ? 'bg-gray-300 text-gray-500 border-gray-400 cursor-not-allowed'\r\n              : 'bg-white text-gray-700 border-gray-300 hover:bg-purple-100'\r\n          }`}\r\n        >\r\n          {persona.nombrecompleto}\r\n          {seleccionado && <span className=\"ml-1\">✅</span>}\r\n        </button>\r\n      );\r\n    })}\r\n  </div>\r\n  <p className=\"text-xs text-gray-500 mt-1\">Puedes seleccionar uno o varios supervisores.</p>\r\n</div>\r\n          {/* Trabajadores */}\r\n<div>\r\n  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Trabajadores asignados</label>\r\n  <div className=\"flex flex-wrap gap-2\">\r\n    {personalDisponible.map((persona) => {\r\n      const estaEnSupervisores = supervisoresSeleccionados.includes(persona.id);\r\n      const seleccionado = trabajadoresSeleccionados.includes(persona.id);\r\n      return (\r\n        <button\r\n          key={persona.id}\r\n          type=\"button\"\r\n          disabled={estaEnSupervisores}\r\n          onClick={() => {\r\n            if (seleccionado) {\r\n              setTrabajadoresSeleccionados(trabajadoresSeleccionados.filter(id => id !== persona.id));\r\n            } else {\r\n              setTrabajadoresSeleccionados([...trabajadoresSeleccionados, persona.id]);\r\n              setSupervisoresSeleccionados(supervisoresSeleccionados.filter(id => id !== persona.id));\r\n            }\r\n          }}\r\n          className={`px-3 py-1 rounded-full border text-sm flex items-center gap-1 transition-all duration-150 ${\r\n            seleccionado\r\n              ? 'bg-green-600 text-white border-green-700'\r\n              : estaEnSupervisores\r\n              ? 'bg-gray-300 text-gray-500 border-gray-400 cursor-not-allowed'\r\n              : 'bg-white text-gray-700 border-gray-300 hover:bg-green-100'\r\n          }`}\r\n        >\r\n          {persona.nombrecompleto}\r\n          {seleccionado && <span className=\"ml-1\">✅</span>}\r\n        </button>\r\n      );\r\n    })}\r\n  </div>\r\n  <p className=\"text-xs text-gray-500 mt-1\">Puedes asignar varios trabajadores.</p>\r\n</div>\r\n\r\n\r\n          \r\n         {/* Trabajos asignados */}\r\n<div>\r\n  <div className=\"grid grid-cols-[1fr_1fr_80px_80px_auto] gap-4 font-semibold text-sm text-gray-600 mb-1 px-1\">\r\n    <div>Nombre</div>\r\n    <div>Unidades</div>\r\n    <div>Instalado</div>\r\n    <div>Faltan</div>\r\n    <div></div>\r\n  </div>\r\n\r\n  {(() => {\r\n   const listaTrabajos = (modoEdicion || mostrarFormulario) ? trabajos : trabajosProyecto;\r\n\r\n\r\n\r\n    return listaTrabajos.map((trabajo, index) => {\r\n      const nombre = trabajo.nombre ?? trabajo.nombre_trabajo ?? \"\";\r\n      const unidades = parseInt(trabajo.unidades ?? trabajo.unidades_totales ?? 0, 10);\r\n      const instaladas = parseInt(trabajo.instaladas ?? 0, 10);\r\n      const faltan = Number.isFinite(unidades - instaladas) ? unidades - instaladas : 0;\r\n\r\n\r\n      return (\r\n        <div key={index} className=\"grid grid-cols-[1fr_1fr_80px_80px_auto] gap-4 mb-2 items-center\">\r\n          {(modoEdicion || mostrarFormulario) ? (\r\n            <>\r\n           <input\r\n  type=\"text\"\r\n  value={nombre ?? \"\"}\r\n  onChange={(e) => {\r\n    const nuevos = [...trabajos];\r\n    nuevos[index].nombre = e.target.value;\r\n    setTrabajos(nuevos);\r\n  }}\r\n  className=\"p-2 border rounded-xl\"\r\n/>\r\n\r\n\r\n<input\r\n  type=\"number\"\r\n  value={Number.isNaN(unidades) ? \"\" : unidades}\r\n  onChange={(e) => {\r\n    const nuevos = [...trabajos];\r\n    const valor = parseInt(e.target.value, 10);\r\n    nuevos[index].unidades = Number.isNaN(valor) ? 0 : valor;\r\n    setTrabajos(nuevos);\r\n  }}\r\n  className=\"p-2 border rounded-xl\"\r\n/>\r\n\r\n\r\n            </>\r\n          ) : (\r\n            <>\r\n              <div className=\"p-2 bg-gray-100 rounded-xl text-center\">{nombre}</div>\r\n              <div className=\"p-2 bg-gray-100 rounded-xl text-center\">{unidades}</div>\r\n            </>\r\n          )}\r\n          <div className=\"p-2 bg-gray-100 rounded-xl text-center\">{instaladas}</div>\r\n          <div className=\"p-2 bg-gray-100 rounded-xl text-center\">{faltan}</div>\r\n          {(modoEdicion || mostrarFormulario) ? (\r\n            <div className=\"flex justify-center\">\r\n              <button\r\n                onClick={() => {\r\n                  const nuevos = trabajos.filter((_, i) => i !== index);\r\n                  setTrabajos(nuevos);\r\n                }}\r\n                className=\"text-red-500 hover:text-red-700\"\r\n                title=\"Eliminar trabajo\"\r\n              >\r\n                <XCircle size={20} />\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n        </div>\r\n      );\r\n    });\r\n  })()}\r\n\r\n \r\n</div>\r\n\r\n\r\n\r\n           \r\n\r\n          {/* Botones */}\r\n          <div className=\"flex justify-end gap-4 mt-4\">\r\n            <button\r\n              onClick={() => {\r\n                setMostrarFormulario(false);\r\n                setNuevoProyecto({ nombre: \"\", descripcion: \"\" });\r\n                setSupervisoresSeleccionados([]);\r\n                setTrabajadoresSeleccionados([]);\r\n                setTrabajos([{ nombre: \"\", unidades: \"\" }]);\r\n              }}\r\n              className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 px-6 py-2 rounded-xl shadow-md\"\r\n            >\r\n              Cancelar\r\n            </button>\r\n            <button\r\n              onClick={agregarProyecto}\r\n              className=\"bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-xl shadow-md\"\r\n            >\r\n              Guardar proyecto\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n{/* Lista de proyectos */}\r\n<div className=\"grid md:grid-cols-2 gap-4\">\r\n  {proyectos.map((p) => (\r\n    <div\r\n      key={p.id}\r\n      className=\"bg-white/30 backdrop-blur-md p-4 rounded-xl shadow-lg border border-white/20 hover:shadow-xl transition relative\"\r\n    >\r\n      <div\r\n        onClick={async () => {\r\n            await cargarDatosProyecto(p);\r\n            await obtenerPersonal(p);\r\n          }}\r\n        className=\"cursor-pointer\"\r\n      >\r\n        <div className=\"text-lg font-semibold text-gray-800\">{p.nombre}</div>\r\n        <div className=\"text-sm text-gray-500 mb-2\">{p.descripcion || \"Sin descripción\"}</div>\r\n        <div className=\"text-sm text-gray-600 mt-2\">\r\n          <strong className=\"text-gray-700\">Supervisor:</strong>{\" \"}\r\n          {supervisoresPorProyecto[p.id] || \"Sin asignar\"}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex gap-2 absolute top-2 right-2\">\r\n        <button\r\n            onClick={async () => {\r\n              setModoEdicion(true);\r\n              await cargarDatosProyecto(p);\r\n              await obtenerPersonal(p); // 🔥 Cargar personal disponible actualizado\r\n            }}\r\n          className=\"text-blue-600 hover:text-blue-800\"\r\n        >\r\n          <Pencil size={18} />\r\n        </button>\r\n        <button\r\n          onClick={() => eliminarProyecto(p.id)}\r\n          className=\"text-red-600 hover:text-red-800\"\r\n        >\r\n          <Trash2 size={18} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  ))}\r\n</div>\r\n\r\n\r\n\r\n{proyectoSeleccionado && (\r\n  <div className=\"fixed inset-0 bg-black bg-opacity-40 flex justify-center items-start z-50 pt-20 px-4\">\r\n    <div className=\"bg-white p-6 rounded-xl shadow-lg max-w-3xl w-full relative\">\r\n\r\n      <button\r\n         className=\"absolute top-2 right-3 text-red-600 font-bold text-xl\"\r\n          \r\n          onClick={() => {\r\n          setProyectoSeleccionado(null);\r\n          setModoEdicion(false);\r\n        }}\r\n      >\r\n        ×\r\n      </button>\r\n\r\n      <h2 className=\"text-xl font-bold text-purple-900 mb-4\">\r\n        {modoEdicion ? '✏️ Editar proyecto' : proyectoSeleccionado.nombre}\r\n      </h2>\r\n\r\n      <div className=\"mb-3\">\r\n        <label className=\"block text-sm font-medium text-gray-700 mb-1\">Nombre</label>\r\n       <input\r\n  value={(modoEdicion ? nuevoProyecto.nombre : proyectoSeleccionado.nombre) ?? \"\"}\r\n  disabled={!modoEdicion}\r\n  onChange={(e) => setNuevoProyecto({ ...nuevoProyecto, nombre: e.target.value })}\r\n  className={`w-full p-2 border rounded-xl ${!modoEdicion ? 'bg-gray-100 cursor-not-allowed' : ''}`}\r\n/>\r\n      </div>\r\n\r\n      <textarea\r\n  value={(modoEdicion ? nuevoProyecto.descripcion : proyectoSeleccionado.descripcion) ?? \"\"}\r\n  disabled={!modoEdicion}\r\n  onChange={(e) => setNuevoProyecto({ ...nuevoProyecto, descripcion: e.target.value })}\r\n  className={`w-full p-2 border rounded-xl ${!modoEdicion ? 'bg-gray-100 cursor-not-allowed' : ''}`}\r\n/>\r\n\r\n\r\n     {/* Supervisores */}\r\n<div>\r\n  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Supervisores</label>\r\n  <div className=\"flex flex-wrap gap-2\">\r\n    {personalDisponible.map((persona) => {\r\n      const estaEnTrabajadores = trabajadoresSeleccionados.includes(persona.id);\r\n      const seleccionado = supervisoresSeleccionados.includes(persona.id);\r\n      return (\r\n        \r\n        <button\r\n          key={persona.id}\r\n          type=\"button\"\r\n          disabled={!modoEdicion || estaEnTrabajadores}\r\n          onClick={() => {\r\n            if (seleccionado) {\r\n              setSupervisoresSeleccionados(supervisoresSeleccionados.filter(id => id !== persona.id));\r\n            } else {\r\n              setSupervisoresSeleccionados([...supervisoresSeleccionados, persona.id]);\r\n              setTrabajadoresSeleccionados(trabajadoresSeleccionados.filter(id => id !== persona.id));\r\n            }\r\n          }}\r\n          className={`px-3 py-1 rounded-full border text-sm flex items-center gap-1 transition-all duration-150 ${\r\n            seleccionado\r\n              ? 'bg-purple-600 text-white border-purple-700'\r\n              : estaEnTrabajadores || !modoEdicion\r\n              ? 'bg-gray-300 text-gray-500 border-gray-400 cursor-not-allowed'\r\n              : 'bg-white text-gray-700 border-gray-300 hover:bg-purple-100'\r\n          }`}\r\n        >\r\n          {persona.nombrecompleto}\r\n          {seleccionado && <span className=\"ml-1\">✅</span>}\r\n        </button>\r\n      );\r\n    })}\r\n  </div>\r\n  <p className=\"text-xs text-gray-500 mt-1\">Puedes seleccionar uno o varios supervisores.</p>\r\n</div>\r\n\r\n{/* Trabajadores */}\r\n<div>\r\n  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Trabajadores asignados</label>\r\n  <div className=\"flex flex-wrap gap-2\">\r\n    {personalDisponible.map((persona) => {\r\n      const estaEnSupervisores = supervisoresSeleccionados.includes(persona.id);\r\n      const seleccionado = trabajadoresSeleccionados.includes(persona.id);\r\n      return (\r\n        <button\r\n          key={persona.id}\r\n          type=\"button\"\r\n          disabled={!modoEdicion || estaEnSupervisores}\r\n          onClick={() => {\r\n            if (seleccionado) {\r\n              setTrabajadoresSeleccionados(trabajadoresSeleccionados.filter(id => id !== persona.id));\r\n            } else {\r\n              setTrabajadoresSeleccionados([...trabajadoresSeleccionados, persona.id]);\r\n              setSupervisoresSeleccionados(supervisoresSeleccionados.filter(id => id !== persona.id));\r\n            }\r\n          }}\r\n          className={`px-3 py-1 rounded-full border text-sm flex items-center gap-1 transition-all duration-150 ${\r\n            seleccionado\r\n              ? 'bg-green-600 text-white border-green-700'\r\n              : estaEnSupervisores || !modoEdicion\r\n              ? 'bg-gray-300 text-gray-500 border-gray-400 cursor-not-allowed'\r\n              : 'bg-white text-gray-700 border-gray-300 hover:bg-green-100'\r\n          }`}\r\n        >\r\n          {persona.nombrecompleto}\r\n          {seleccionado && <span className=\"ml-1\">✅</span>}\r\n        </button>\r\n      );\r\n    })}\r\n  </div>\r\n  <p className=\"text-xs text-gray-500 mt-1\">Puedes asignar varios trabajadores.</p>\r\n</div>\r\n\r\n{/* Trabajos asignados */}\r\n<div>\r\n  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Trabajos por realizar</label>\r\n  <div className=\"grid grid-cols-[1fr_1fr_80px_80px_auto] gap-4 font-semibold text-sm text-gray-600 mb-1 px-1\">\r\n    <div>Nombre</div>\r\n    <div>Unidades</div>\r\n    <div>Instalado</div>\r\n    <div>Faltan</div>\r\n    <div></div>\r\n  </div>\r\n\r\n\r\n \r\n {(() => {\r\n  const listaTrabajos = trabajosProyecto.length > 0 ? trabajosProyecto : trabajos;\r\n\r\n  return listaTrabajos.map((trabajo, index) => {\r\n    const nombre = trabajo.nombre ?? trabajo.nombre_trabajo ?? \"\";\r\n    const unidades = parseInt(trabajo.unidades ?? trabajo.unidades_totales ?? 0, 10);\r\n    const instaladas = parseInt(trabajo.instaladas ?? 0, 10);\r\n    const faltan = Number.isFinite(unidades - instaladas) ? unidades - instaladas : 0;\r\n\r\n    return (\r\n      <div key={index} className=\"grid grid-cols-[1fr_1fr_80px_80px_auto] gap-4 mb-2 items-center\">\r\n        {modoEdicion ? (\r\n          <>\r\n            <input\r\n              type=\"text\"\r\n              value={nombre}\r\n              onChange={(e) => {\r\n                const nuevos = [...trabajos];\r\n                nuevos[index].nombre = e.target.value;\r\n                setTrabajos(nuevos);\r\n              }}\r\n              className=\"p-2 border rounded-xl\"\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              value={Number.isNaN(unidades) ? \"\" : unidades}\r\n              onChange={(e) => {\r\n                const nuevos = [...trabajos];\r\n                const valor = parseInt(e.target.value, 10);\r\n                nuevos[index].unidades = Number.isNaN(valor) ? 0 : valor;\r\n                setTrabajos(nuevos);\r\n              }}\r\n              className=\"p-2 border rounded-xl\"\r\n            />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"p-2 bg-gray-100 rounded-xl text-center\">{nombre}</div>\r\n            <div className=\"p-2 bg-gray-100 rounded-xl text-center\">{unidades}</div>\r\n          </>\r\n        )}\r\n        <div className=\"p-2 bg-gray-100 rounded-xl text-center\">{instaladas}</div>\r\n        <div className=\"p-2 bg-gray-100 rounded-xl text-center\">{faltan}</div>\r\n\r\n        {modoEdicion ? (\r\n          <div className=\"text-center\">\r\n            <button\r\n              onClick={() => {\r\n                const nuevos = trabajos.filter((_, i) => i !== index);\r\n                setTrabajos(nuevos);\r\n              }}\r\n              className=\"text-red-600 hover:text-red-800 font-bold text-lg\"\r\n            >\r\n              ❌\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n    );\r\n  });\r\n})()}\r\n\r\n\r\n   {/* 🔥 Botón para agregar otro trabajo */}\r\n  {(modoEdicion || mostrarFormulario) && (\r\n        <button\r\n          onClick={() =>\r\n            setTrabajos([...trabajos, { nombre: \"\", unidades: \"\", instaladas: 0 }])\r\n          }\r\n          className=\"text-blue-700 text-sm hover:underline mt-1\"\r\n        >\r\n          ➕ Añadir otro trabajo\r\n        </button>\r\n  )}\r\n</div>\r\n\r\n\r\n<ResumenFinanciero\r\n  trabajosProyecto={trabajosProyecto}\r\n  personalAsignado={personalAsignado}\r\n  gastosProyecto={gastosProyecto}\r\n/>\r\n\r\n      <div className=\"flex justify-end mt-4 gap-2\">\r\n  {modoEdicion ? (\r\n    <>\r\n      <button\r\n        onClick={() => {\r\n          setModoEdicion(false);\r\n        }}\r\n        className=\"bg-gray-300 px-4 py-2 rounded-xl\"\r\n      >\r\n        Cancelar\r\n      </button>\r\n      <button\r\n        onClick={async () => {\r\n          // 🔹 Actualizar proyecto (nombre y descripción)\r\n          const { error } = await supabase\r\n            .from(\"proyectos\")\r\n            .update({\r\n              nombre: nuevoProyecto.nombre,\r\n              descripcion: nuevoProyecto.descripcion\r\n            })\r\n            .eq(\"id\", proyectoSeleccionado.id);\r\n\r\n          if (error) {\r\n            console.error(\"Error al actualizar proyecto:\", error);\r\n            alert(\"Error al guardar cambios\");\r\n            return;\r\n          }\r\n\r\n          // 🔹 Limpiar supervisores y trabajadores actuales\r\n          await supabase\r\n            .from(\"proyectos_personal\")\r\n            .delete()\r\n            .eq(\"proyecto_id\", proyectoSeleccionado.id);\r\n\r\n          // 🔹 Insertar supervisores\r\n          await supabase\r\n            .from(\"proyectos_personal\")\r\n            .insert(\r\n              supervisoresSeleccionados.map((id) => ({\r\n                proyecto_id: proyectoSeleccionado.id,\r\n                trabajador_id: id,\r\n                rol: \"supervisor\"\r\n              }))\r\n            );\r\n\r\n          // 🔹 Insertar trabajadores\r\n          await supabase\r\n            .from(\"proyectos_personal\")\r\n            .insert(\r\n              trabajadoresSeleccionados.map((id) => ({\r\n                proyecto_id: proyectoSeleccionado.id,\r\n                trabajador_id: id,\r\n                rol: \"trabajador\"\r\n              }))\r\n            );\r\n\r\n          // 🔹 Limpiar trabajos actuales\r\n          await supabase\r\n            .from(\"proyectos_trabajos\")\r\n            .delete()\r\n            .eq(\"proyecto_id\", proyectoSeleccionado.id);\r\n\r\n          // 🔹 Insertar trabajos nuevos\r\n          await supabase\r\n            .from(\"proyectos_trabajos\")\r\n            .insert(\r\n              trabajos\r\n                .filter(t => t.nombre.trim() !== \"\" && parseInt(t.unidades))\r\n                .map((t) => ({\r\n                  proyecto_id: proyectoSeleccionado.id,\r\n                  nombre_trabajo: t.nombre.trim(),\r\n                  unidades_totales: parseInt(t.unidades, 10)\r\n                }))\r\n            );\r\n\r\n          alert(\"Cambios guardados correctamente\");\r\n          setModoEdicion(false);\r\n          obtenerProyectos(); // Para refrescar la lista\r\n        }}\r\n        className=\"bg-blue-600 text-white px-4 py-2 rounded-xl\"\r\n      >\r\n        Guardar cambios\r\n      </button>\r\n\r\n\r\n          </>\r\n        ) : (\r\n          <button\r\n            \r\n  onClick={async () => {\r\n  setNuevoProyecto({\r\n    nombre: proyectoSeleccionado.nombre,\r\n    descripcion: proyectoSeleccionado.descripcion\r\n  });\r\n  setModoEdicion(true);\r\n\r\n  const { data: sup } = await supabase\r\n    .from(\"proyectos_personal\")\r\n    .select(\"trabajador_id\")\r\n    .eq(\"proyecto_id\", proyectoSeleccionado.id)\r\n    .eq(\"rol\", \"supervisor\");\r\n\r\n  setSupervisoresSeleccionados(sup?.map((s) => s.trabajador_id) || []);\r\n\r\n  const { data: trab } = await supabase\r\n    .from(\"proyectos_personal\")\r\n    .select(\"trabajador_id\")\r\n    .eq(\"proyecto_id\", proyectoSeleccionado.id)\r\n    .eq(\"rol\", \"trabajador\");\r\n\r\n  setTrabajadoresSeleccionados(trab?.map((t) => t.trabajador_id) || []);\r\n\r\n  const { data: trabs, error: errorTrabs } = await supabase\r\n    .from(\"proyectos_trabajos\")\r\n    .select(\"nombre_trabajo, unidades_totales\")\r\n    .eq(\"proyecto_id\", proyectoSeleccionado.id);\r\n\r\n  if (errorTrabs) {\r\n    console.error(\"Error cargando trabajos del proyecto:\", errorTrabs);\r\n    return;\r\n  }\r\n\r\n  setTrabajos(\r\n    trabs.map((t) => ({\r\n      nombre: t.nombre_trabajo,\r\n      unidades: t.unidades_totales\r\n    }))\r\n  );\r\n\r\n  await obtenerPersonal(proyectoSeleccionado); // Recarga la lista filtrada de personal\r\n\r\n}}\r\n\r\n\r\n  className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-xl shadow-md\"\r\n>\r\n  ✏️ Editar\r\n</button>\r\n\r\n        )}\r\n      </div>\r\n    </div>\r\n  </div>\r\n)}\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}