{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\garci\\\\Downloads\\\\nimbus-login-app\\\\src\\\\componentes\\\\Personal.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { supabase } from '../supabase';\nimport React from 'react';\nimport AgregarReporte from './AgregarReporte';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Personal({\n  usuario\n}) {\n  _s();\n  const [vista, setVista] = useState('planilla');\n  const [personal, setPersonal] = useState([]);\n  const [reportes, setReportes] = useState([]);\n  const [puestosList, setPuestosList] = useState([]);\n  const [proyectosList, setProyectosList] = useState([]);\n  const [historialVisible, setHistorialVisible] = useState(null);\n  const [nuevoPuesto, setNuevoPuesto] = useState('');\n  const [nuevoProyecto, setNuevoProyecto] = useState('');\n  const [gastosCajaChica, setGastosCajaChica] = useState([]);\n  const [reporteEnEdicion, setReporteEnEdicion] = useState(null);\n  const [trabajadorEnEdicion, setTrabajadorEnEdicion] = useState(null);\n  const [nuevoPersonal, setNuevoPersonal] = useState({\n    nombre: '',\n    puesto: '',\n    proyecto: '',\n    salario: '',\n    meta: '',\n    bonificacion: '',\n    trabajometa: '',\n    fecha: '',\n    modalidad: 'día',\n    precioporcantidad: '',\n    cajaChica: 'no',\n    montoCajaChica: '',\n    viaticosDiarios: ''\n  });\n  useEffect(() => {\n    const fetchGastos = async () => {\n      const {\n        data,\n        error\n      } = await supabase.from(\"gastos_cajachica\").select(\"*\").order(\"fecha\", {\n        ascending: false\n      });\n      if (!error) setGastosCajaChica(data);\n    };\n    fetchGastos();\n  }, []);\n  useEffect(() => {\n    fetchPuestos();\n    fetchProyectos();\n    obtenerPersonal();\n    obtenerReportes();\n  }, []);\n  const fetchPuestos = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('puestos').select('*').order('nombre', {\n      ascending: true\n    });\n    if (!error) setPuestosList(data);\n  };\n  const fetchProyectos = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('proyectos').select('*').order('nombre', {\n      ascending: true\n    });\n    if (!error) setProyectosList(data);\n  };\n  const obtenerPersonal = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('registrodepersonal').select('*').order('created_at', {\n      ascending: false\n    });\n    if (!error) setPersonal(data);\n  };\n  const obtenerReportes = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('reportesdiarios').select('*');\n    if (!error) setReportes(data);\n  };\n\n  // El resto del código sigue igual, eliminando el bloque duplicado\n  // donde se usa reportesPersona fuera del map()\n  // Asegúrate de que todo lo que use \"p\" o \"reportesPersona\"\n  // esté dentro de personal.map(...)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-6 max-w-7xl mx-auto bg-white/10 backdrop-blur-xl p-6 rounded-2xl\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(Personal, \"Mw9YuLQCei6cf2XSBFtH94l0S8c=\");\n_c = Personal;\nvar _c;\n$RefreshReg$(_c, \"Personal\");","map":{"version":3,"names":["useState","useEffect","supabase","React","AgregarReporte","jsxDEV","_jsxDEV","Personal","usuario","_s","vista","setVista","personal","setPersonal","reportes","setReportes","puestosList","setPuestosList","proyectosList","setProyectosList","historialVisible","setHistorialVisible","nuevoPuesto","setNuevoPuesto","nuevoProyecto","setNuevoProyecto","gastosCajaChica","setGastosCajaChica","reporteEnEdicion","setReporteEnEdicion","trabajadorEnEdicion","setTrabajadorEnEdicion","nuevoPersonal","setNuevoPersonal","nombre","puesto","proyecto","salario","meta","bonificacion","trabajometa","fecha","modalidad","precioporcantidad","cajaChica","montoCajaChica","viaticosDiarios","fetchGastos","data","error","from","select","order","ascending","fetchPuestos","fetchProyectos","obtenerPersonal","obtenerReportes","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/garci/Downloads/nimbus-login-app/src/componentes/Personal.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { supabase } from '../supabase';\r\nimport React from 'react';\r\nimport AgregarReporte from './AgregarReporte';\r\n\r\nexport default function Personal({ usuario }) {\r\n  const [vista, setVista] = useState('planilla');\r\n  const [personal, setPersonal] = useState([]);\r\n  const [reportes, setReportes] = useState([]);\r\n  const [puestosList, setPuestosList] = useState([]);\r\n  const [proyectosList, setProyectosList] = useState([]);\r\n  const [historialVisible, setHistorialVisible] = useState(null);\r\n  const [nuevoPuesto, setNuevoPuesto] = useState('');\r\n  const [nuevoProyecto, setNuevoProyecto] = useState('');\r\n  const [gastosCajaChica, setGastosCajaChica] = useState([]);\r\n  const [reporteEnEdicion, setReporteEnEdicion] = useState(null);\r\n  const [trabajadorEnEdicion, setTrabajadorEnEdicion] = useState(null);\r\n  const [nuevoPersonal, setNuevoPersonal] = useState({\r\n    nombre: '',\r\n    puesto: '',\r\n    proyecto: '',\r\n    salario: '',\r\n    meta: '',\r\n    bonificacion: '',\r\n    trabajometa: '',\r\n    fecha: '',\r\n    modalidad: 'día',\r\n    precioporcantidad: '',\r\n    cajaChica: 'no',\r\n    montoCajaChica: '',\r\n    viaticosDiarios: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchGastos = async () => {\r\n      const { data, error } = await supabase\r\n        .from(\"gastos_cajachica\")\r\n        .select(\"*\")\r\n        .order(\"fecha\", { ascending: false });\r\n      if (!error) setGastosCajaChica(data);\r\n    };\r\n    fetchGastos();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchPuestos();\r\n    fetchProyectos();\r\n    obtenerPersonal();\r\n    obtenerReportes();\r\n  }, []);\r\n\r\n  const fetchPuestos = async () => {\r\n    const { data, error } = await supabase.from('puestos').select('*').order('nombre', { ascending: true });\r\n    if (!error) setPuestosList(data);\r\n  };\r\n\r\n  const fetchProyectos = async () => {\r\n    const { data, error } = await supabase.from('proyectos').select('*').order('nombre', { ascending: true });\r\n    if (!error) setProyectosList(data);\r\n  };\r\n\r\n  const obtenerPersonal = async () => {\r\n    const { data, error } = await supabase\r\n      .from('registrodepersonal')\r\n      .select('*')\r\n      .order('created_at', { ascending: false });\r\n    if (!error) setPersonal(data);\r\n  };\r\n\r\n  const obtenerReportes = async () => {\r\n    const { data, error } = await supabase\r\n      .from('reportesdiarios')\r\n      .select('*');\r\n    if (!error) setReportes(data);\r\n  };\r\n\r\n  // El resto del código sigue igual, eliminando el bloque duplicado\r\n  // donde se usa reportesPersona fuera del map()\r\n  // Asegúrate de que todo lo que use \"p\" o \"reportesPersona\"\r\n  // esté dentro de personal.map(...)\r\n\r\n  return (\r\n    <div className=\"mt-6 max-w-7xl mx-auto bg-white/10 backdrop-blur-xl p-6 rounded-2xl\">\r\n      {/* UI y lógica del componente */}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}